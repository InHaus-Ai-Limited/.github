name: "Terraform"
description: "Terraform destroy workflow"

inputs:
  terraform_workspace:
    description: "The Terraform workspace to use"
    default: "default"
    required: false
  terraform_version:
    description: "The Terraform version to use"
    default: "0.12.28"
    required: false
  github_token:
    description: "The GitHub token to use"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ inputs.terraform_version }}
    - name: Terraform Init
      id: init
      shell: bash
      run: |
        result=$(terraform init)
        exitCode=$?
        echo "::set-output name=result::$(echo $result)"
        echo "::set-output name=success::$(echo $exitCode == 0)"
    - name: Terraform select workspace
      id: workspace
      shell: bash
      run: |
        result=$( terraform workspace select ${{ inputs.terraform_workspace }})
        exitCode=$?
        echo "::set-output name=result::$(echo $result)"
        echo "::set-output name=success::$(echo $exitCode == 0)"
    - name: Terraform Validate
      id: validate
      shell: bash
      run: |
        result=$(terraform validate -no-color)
        exitCode=$?
        echo "::set-output name=result::$(echo $result)"
        echo "::set-output name=success::$(echo $exitCode == 0)"
    - name: Terraform Destroy
      id: destroy
      shell: bash
      run: |
        result=$(terraform destroy -auto-approve)
        exitCode=$?
        echo "::set-output name=result::$(echo $result)"
        echo "::set-output name=success::$(echo $exitCode == 0)"
    - name: Find Comment
      if: github.event_name == 'pull_request'
      uses: peter-evans/find-comment@v1
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: "github-actions[bot]"
        body-includes: "Bot Ref: 8643626573"
    - name: Set current date as env variable
      if: github.event_name == 'pull_request'
      id: time
      uses: nanzm/get-time-action@v1.1
      with:
        timeZone: 0
        format: "YYYY-MM-DD HH-mm-ss"
    - name: Create or Update comment
      if: github.event_name == 'pull_request'
      uses: peter-evans/create-or-update-comment@v1
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          ${{ steps.destroy.success == 'false' ? "Terraform destroy failed! ❌" : "Terraform destroy succeeded! ✅"}}

          *Pusher: `@${{ github.actor }}`, Action: `${{ github.event_name }}`*
          *Build: [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})*
          *Bot Ref: 8643626573*
        reactions: rocket
        edit-mode: replace
    - name: Terraform Plan Status
      if: steps.destroy.success == 'false'
      shell: bash
      run: exit 1
