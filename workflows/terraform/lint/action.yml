name: "Terraform"
description: "Terraform lint workflow"

inputs:
  terraform_workspace:
    description: "The Terraform workspace to use"
    default: "default"
    required: false
  terraform_version:
    description: "The Terraform version to use"
    default: "0.12.28"
    required: false
  github_token:
    description: "The GitHub token to use"
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
      name: Checkout
    - name: Cache
      uses: actions/cache@v2
      env:
        cache-name: terraform-apply
      with:
        path: ./.terraform
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.ref }}-${{ inputs.terraform_workspace }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-${{ github.ref }}-${{ inputs.terraform_workspace }}
          ${{ runner.os }}-${{ env.cache-name }}-${{ github.ref }}-
          ${{ runner.os }}-${{ env.cache-name }}-
          ${{ runner.os }}-
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ inputs.terraform_version }}
    - name: Terraform Init
      id: init
      env:
        TF_WORKSPACE: ${{ inputs.terraform_workspace }}
      shell: bash
      run: |
        set +e
        result=$(terraform init)
        code=$?
        set -e
        echo "${result}"
        echo "::set-output name=exit_code::${code}"
    - uses: terraform-linters/setup-tflint@v1
      name: Setup TFLint
      with:
        tflint_version: v0.29.0
    - name: Terraform Validate
      id: validate
      env:
        TF_WORKSPACE: ${{ inputs.terraform_workspace }}
      shell: bash
      run: |
        set +e
        result=$(terraform validate -no-color)
        code=$?
        set -e
        echo "${result}"
        echo "::set-output name=exit_code::${code}"
    - name: Init TFLint
      shell: bash
      env:
        TF_WORKSPACE: ${{ inputs.terraform_workspace }}
      run: |
        set +e
        result=$(tflint --init)
        code=$?
        set -e
        echo "${result}"
        echo "::set-output name=exit_code::${code}"
    - name: Run TFLint
      id: lint
      env:
        TF_WORKSPACE: ${{ inputs.terraform_workspace }}
      shell: bash
      run: |
        set +e
        result=$(tflint -f compact --module)
        code=$?
        set -e
        echo "${result}"
        echo "::set-output name=exit_code::${code}"
    - name: Find Comment
      if: github.event_name == 'pull_request'
      uses: peter-evans/find-comment@v1
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: "github-actions[bot]"
        body-includes: "Bot Ref: 6904391964-${{ inputs.terraform_workspace }}"
    - name: Set current date as env variable
      id: time
      if: github.event_name == 'pull_request'
      uses: nanzm/get-time-action@v1.1
      with:
        timeZone: 0
        format: "YYYY-MM-DD HH-mm-ss"
    - name: Create or Update comment
      if: github.event_name == 'pull_request'
      uses: peter-evans/create-or-update-comment@v1
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          ### Terraform Lint (${{ steps.time.outputs.time }})
          #### Terraform Validation ${{ steps.validate.outputs.exit_code == 0 && 'success! ✅' || 'failed! ❌' }}
          #### Terraform Lint Init ${{ steps.init.outputs.exit_code == 0 && 'succeeded! ✅' || 'failed! ❌' }}
          #### Terraform Lint ${{ steps.lint.outputs.exit_code == 0 && 'succeeded! ✅' || 'failed! ❌' }}

          <details><summary>Show Result</summary>

          ```bash
          ${{ steps.init.exit_code == 0 && steps.lint.outputs.stdout || steps.lint.outputs.stderr }}
          ```

          </details>

          *Pusher: `@${{ github.actor }}`, Action: `${{ github.event_name }}`*
          *Build: [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})*
          *Bot Ref: 6904391964-${{ inputs.terraform_workspace }}*
        reactions: rocket
        edit-mode: replace
    - name: Terraform Lint Status
      shell: bash
      run: ${{ steps.lint.outputs.exit_code }}
